{"version":3,"sources":["app/App.js","util/sw/sw.js","index.js"],"names":["App","className","startDelay","Delay","ms","Backspace","count","delay","href","target","rel","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"oQAoEeA,EAhEH,kBACR,yBAAKC,UAAU,gBACX,kBAAC,IAAD,CAAQC,WAAY,KAChB,qCAIA,6BACA,kBAAC,IAAOC,MAAR,CAAcC,GAAI,MAElB,4CACe,0BAAMH,UAAU,QAAhB,oBADf,sBAEI,kBAAC,IAAOI,UAAR,CAAkBC,MAAO,GAAIC,MAAO,MAFxC,OAII,uBAAGC,KAAK,kCACLC,OAAO,SACPC,IAAI,uBAFP,iBAOJ,6BACA,kBAAC,IAAOP,MAAR,CAAcC,GAAI,MAElB,0DAEI,0BAAMH,UAAU,UAAhB,WAFJ,IAGI,0BAAMA,UAAU,QAAhB,QAHJ,IAII,0BAAMA,UAAU,MAAhB,MAJJ,IAKI,0BAAMA,UAAU,QAAhB,QALJ,IAMI,0BAAMA,UAAU,UAAhB,SAEJ,6BAEA,kBAAC,IAAOE,MAAR,CAAcC,GAAI,MAClB,iEAGA,6BAEA,kBAAC,IAAOD,MAAR,CAAcC,GAAI,MAClB,yCAGA,6BACA,0BAAMH,UAAU,UAAhB,YACA,6BACA,0BAAMA,UAAU,UAAhB,sBACA,6BACA,0BAAMA,UAAU,UAAhB,mCACA,6BACA,0BAAMA,UAAU,UAAhB,WACA,6BACA,0BAAMA,UAAU,UAAhB,aACA,6BACA,0BAAMA,UAAU,UAAhB,oBACA,kBAAC,IAAOI,UAAR,CAAkBC,MAAO,GAAIC,MAAO,MAtDxC,eAwDI,gCC9DNI,EAAcC,QACa,cAA7BC,OAAOC,SAASC,UACgB,UAA7BF,OAAOC,SAASC,UAChBF,OAAOC,SAASC,SAASC,MAC5B,2DAuBJ,SAASC,EAAgBC,EAAOC,GAC5BC,UAAUC,cACLC,SAASJ,GACTK,MAAK,SAAAC,GACFA,EAAaC,cAAgB,WACzB,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACE,cAA3BF,EAAiBG,QACbT,UAAUC,cAAcS,YACxBC,QAAQC,IAAR,oFAEIb,GAAUA,EAAOc,UACjBd,EAAOc,SAAST,KAGpBO,QAAQC,IAAI,sCAERb,GAAUA,EAAOe,WACjBf,EAAOe,UAAUV,WAOxCW,OAAM,SAAAC,GAAK,OAAIL,QAAQK,MAAM,4CAA6CA,MC7CnFC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,SDFzC,SAAkBrB,GACrB,GAA6C,kBAAmBC,UAAW,CAEvE,GADkB,IAAIqB,IAAIC,YAAwB7B,OAAOC,SAASN,MACpDmC,SAAW9B,OAAOC,SAAS6B,OACrC,OAGJ9B,OAAO+B,iBAAiB,QAAQ,WAC5B,IAAM1B,EAAK,UAAMwB,YAAN,sBACP/B,IAyChB,SAAiCO,EAAOC,GACpC0B,MAAM3B,GACDK,MAAK,SAAAuB,GACF,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBACjB,MAApBH,EAASI,QAAkC,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cACvE/B,UAAUC,cAAc+B,MAAM7B,MAAK,SAAAC,GAAY,OAAIA,EAAa6B,aAAa9B,MAAK,kBAAMV,OAAOC,SAASwC,eAExGrC,EAAgBC,EAAOC,MAG9BgB,OAAM,kBAAMJ,QAAQC,IAAI,oEAlDjBuB,CAAwBrC,EAAOC,GAC/BC,UAAUC,cAAc+B,MAAM7B,MAAK,kBAAMQ,QAAQC,IAAR,oEAEzCf,EAAgBC,EAAOC,OCTvCqC,K","file":"static/js/main.ccb66a9d.chunk.js","sourcesContent":["import React from 'react';\nimport \"./App.css\"\nimport Typist from \"react-typist\";\n\nconst App = () => (\n    <div className=\"sokomishalov\">\n        <Typist startDelay={2000}>\n            <span>\n                Hi!\n            </span>\n\n            <br/>\n            <Typist.Delay ms={500}/>\n\n            <span>\n                My name is <span className=\"name\">Mikhael Sokolov </span> aka soko misha lov\n                <Typist.Backspace count={15} delay={1000}/>\n                &nbsp;\n                <a href=\"https://github.com/sokomishalov\"\n                   target=\"_blank\"\n                   rel=\"noopener noreferrer\">\n                    sokomishalov\n                </a>\n            </span>\n\n            <br/>\n            <Typist.Delay ms={500}/>\n\n            <span>\n                Software engineer. Mostly\n                <span className=\"kotlin\"> Kotlin</span>/\n                <span className=\"java\">Java</span>/\n                <span className=\"js\">JS</span>/\n                <span className=\"dart\">Dart</span>/\n                <span className=\"others\">etc.</span>\n            </span>\n            <br/>\n\n            <Typist.Delay ms={500}/>\n            <span>\n                Born and live in Moscow, Russia\n            </span>\n            <br/>\n\n            <Typist.Delay ms={500}/>\n            <span>\n                Fan of:\n            </span>\n            <br/>\n            <span className=\"fan-of\">* coding</span>\n            <br/>\n            <span className=\"fan-of\">* films and series</span>\n            <br/>\n            <span className=\"fan-of\">* football (it's not soccer!!!)</span>\n            <br/>\n            <span className=\"fan-of\">* memes</span>\n            <br/>\n            <span className=\"fan-of\">* sarcasm</span>\n            <br/>\n            <span className=\"fan-of\">* drinking vodka</span>\n            <Typist.Backspace count={14} delay={1000}/>\n            chilling out\n            <br/>\n\n        </Typist>\n    </div>\n);\n\nexport default App;\n","const isLocalhost = Boolean(\n    window.location.hostname === 'localhost'\n    || window.location.hostname === '[::1]'\n    || window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n            if (isLocalhost) {\n                checkValidServiceWorker(swUrl, config);\n                navigator.serviceWorker.ready.then(() => console.log(`This web app is being served cache-first by a service worker`));\n            } else {\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            console.log(`New content is available and will be used when all tabs for this page are closed`);\n\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            console.log('Content is cached for offline use.');\n\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => console.error('Error during service worker registration:', error));\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    fetch(swUrl)\n        .then(response => {\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                navigator.serviceWorker.ready.then(registration => registration.unregister().then(() => window.location.reload()));\n            } else {\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => console.log('No internet connection found. App is running in offline mode.'));\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => registration.unregister());\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport \"react-typist/dist/Typist.css\"\n\nimport App from './app/App';\n\nimport {register as registerServiceWorker} from './util/sw/sw';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\nregisterServiceWorker();\n"],"sourceRoot":""}