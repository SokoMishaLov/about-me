{"version":3,"sources":["app/common-info/common-info.js","util/consts/consts.js","app/timeline/timeline.js","app/App.js","util/sw/sw.js","index.js"],"names":["CommonInfo","onTypistDone","age","moment","diff","toString","className","startDelay","avgTypingDelay","cursor","hideWhenDone","onTypingDone","Delay","ms","onClick","window","open","Backspace","count","delay","Timeline","direction","Step","title","description","App","useState","typistDone","setTypistDone","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d9aec8fc.chunk.js","sourcesContent":["import React from 'react'\nimport \"./common-info.css\"\nimport Typist from \"react-typist\"\nimport {BIRTHDAY, GITHUB_PAGE} from \"../../util/consts/consts\"\nimport moment from \"moment\"\nimport _ from \"lodash\"\n\n\nconst CommonInfo = ({onTypistDone = _.noop}) => {\n\n    const age = moment().diff(moment(BIRTHDAY, \"DD.MM.YYYY\"), 'years').toString();\n\n    return (\n        <div className=\"common\">\n            <Typist startDelay={1500}\n                    avgTypingDelay={45}\n                    cursor={{hideWhenDone: true}}\n                    onTypingDone={onTypistDone}>\n                <span>\n                    Hi!\n                </span>\n\n                <br/>\n                <Typist.Delay ms={500}/>\n\n                <span>\n                    My name is <span className=\"name\">Mikhael Sokolov </span> aka&nbsp;\n                    <span className=\"github-link\" onClick={() => window.open(GITHUB_PAGE, \"_blank\")}>\n                        sokomishalov\n                    </span>\n                </span>\n\n                <br/>\n                <Typist.Delay ms={500}/>\n\n                <span>\n                    Software engineer, mostly\n                    <span className=\"kotlin\"> Kotlin</span>/\n                    <span className=\"java\">Java</span>/\n                    <span className=\"js\">JS</span>/\n                    <span className=\"dart\">Dart</span>/\n                    <span className=\"others\">etc.</span>\n                </span>\n                <br/>\n\n                <Typist.Delay ms={500}/>\n                <span>\n                    I am {age} y.o., born and live in Moscow, Russia\n                </span>\n                <br/>\n\n                <Typist.Delay ms={500}/>\n                <span>\n                    Fan of:\n                </span>\n                <br/>\n                <span className=\"fan-of\">* coding</span>\n                <br/>\n                <span className=\"fan-of\">* films, series and video games</span>\n                <br/>\n                <span className=\"fan-of\">* football (it's not soccer!!!)</span>\n                <br/>\n                <span className=\"fan-of\">* memes</span>\n                <br/>\n                <span className=\"fan-of\">* sarcasm</span>\n                <br/>\n                <span className=\"fan-of\">* drinking vodka</span>\n                <Typist.Backspace count={14} delay={500}/>\n                chilling out\n                <br/>\n            </Typist>\n        </div>\n    );\n};\n\nexport default CommonInfo;","export const GITHUB_PAGE = \"https://github.com/sokomishalov\";\nexport const BIRTHDAY = \"10.07.1995\";","import React from 'react'\nimport \"./timeline.css\"\nimport {Steps} from \"antd\"\n\nconst Timeline = () => (\n    <div className=\"timeline\">\n        <Steps direction=\"vertical\">\n            <Steps.Step title=\"VTB\" description=\"VTB\"/>\n            <Steps.Step title=\"Sberbank\" description=\"Sberbank\"/>\n            <Steps.Step title=\"Sberbank technologies\" description=\"Sberbank technologies\"/>\n        </Steps>\n    </div>\n);\n\nexport default Timeline;","import React, {useState} from 'react'\nimport \"./App.css\"\nimport CommonInfo from \"./common-info/common-info\"\nimport Timeline from \"./timeline/timeline\"\nimport Fade from \"react-reveal/Fade\";\n\nconst App = () => {\n    const [typistDone, setTypistDone] = useState(false)\n\n    return (\n        <div className=\"sokomishalov\">\n            <CommonInfo onTypistDone={() => setTypistDone(true)}/>\n            {typistDone\n            && <Fade>\n                <Timeline/>\n            </Fade>\n            }\n        </div>\n    )\n}\n\nexport default App\n","const isLocalhost = Boolean(\n    window.location.hostname === 'localhost'\n    || window.location.hostname === '[::1]'\n    || window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n            if (isLocalhost) {\n                checkValidServiceWorker(swUrl, config);\n                navigator.serviceWorker.ready.then(() => console.log(`This web app is being served cache-first by a service worker`));\n            } else {\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            console.log(`New content is available and will be used when all tabs for this page are closed`);\n\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            console.log('Content is cached for offline use.');\n\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => console.error('Error during service worker registration:', error));\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    fetch(swUrl)\n        .then(response => {\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                navigator.serviceWorker.ready.then(registration => registration.unregister().then(() => window.location.reload()));\n            } else {\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => console.log('No internet connection found. App is running in offline mode.'));\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => registration.unregister());\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport \"react-typist/dist/Typist.css\"\nimport \"./less/antd.css\"\n\nimport App from './app/App';\n\nimport {register as registerServiceWorker} from './util/sw/sw';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\nregisterServiceWorker();\n"],"sourceRoot":""}